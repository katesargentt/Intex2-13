// <auto-generated />
using System;
using CineNiche.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CineNiche.API.Migrations.Movies
{
    [DbContext(typeof(MoviesContext))]
    partial class MoviesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("CineNiche.API.Data.MoviesRating", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("UserId")
                        .HasColumnOrder(0);

                    b.Property<string>("ShowId")
                        .HasColumnType("TEXT")
                        .HasColumnName("ShowId")
                        .HasColumnOrder(1);

                    b.Property<int?>("Rating")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Rating");

                    b.HasKey("UserId", "ShowId");

                    b.HasIndex("ShowId");

                    b.ToTable("movies_ratings", (string)null);
                });

            modelBuilder.Entity("CineNiche.API.Data.MoviesTitle", b =>
                {
                    b.Property<string>("ShowId")
                        .HasColumnType("TEXT")
                        .HasColumnName("ShowId");

                    b.Property<int?>("Action")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Action");

                    b.Property<int?>("Adventure")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Adventure");

                    b.Property<int?>("AnimeSeriesInternationalTvShows")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AnimeSeriesInternationalTvShows");

                    b.Property<int?>("BritishTvShowsDocuseriesInternationalTvShows")
                        .HasColumnType("INTEGER")
                        .HasColumnName("BritishTvShowsDocuseriesInternationalTvShows");

                    b.Property<string>("Cast")
                        .HasColumnType("TEXT")
                        .HasColumnName("Cast");

                    b.Property<int?>("Children")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Children");

                    b.Property<int?>("Comedies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Comedies");

                    b.Property<int?>("ComediesDramasInternationalMovies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ComediesDramasInternationalMovies");

                    b.Property<int?>("ComediesInternationalMovies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ComediesInternationalMovies");

                    b.Property<int?>("ComediesRomanticMovies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ComediesRomanticMovies");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT")
                        .HasColumnName("Country");

                    b.Property<int?>("CrimeTvShowsDocuseries")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CrimeTvShowsDocuseries");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("Director")
                        .HasColumnType("TEXT")
                        .HasColumnName("Director");

                    b.Property<int?>("Documentaries")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Documentaries");

                    b.Property<int?>("DocumentariesInternationalMovies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DocumentariesInternationalMovies");

                    b.Property<int?>("Docuseries")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Docuseries");

                    b.Property<int?>("Dramas")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Dramas");

                    b.Property<int?>("DramasInternationalMovies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DramasInternationalMovies");

                    b.Property<int?>("DramasRomanticMovies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DramasRomanticMovies");

                    b.Property<string>("Duration")
                        .HasColumnType("TEXT")
                        .HasColumnName("Duration");

                    b.Property<int?>("FamilyMovies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("FamilyMovies");

                    b.Property<int?>("Fantasy")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Fantasy");

                    b.Property<int?>("HorrorMovies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("HorrorMovies");

                    b.Property<int?>("InternationalMoviesThrillers")
                        .HasColumnType("INTEGER")
                        .HasColumnName("InternationalMoviesThrillers");

                    b.Property<int?>("InternationalTvShowsRomanticTvShowsTvDramas")
                        .HasColumnType("INTEGER")
                        .HasColumnName("InternationalTvShowsRomanticTvShowsTvDramas");

                    b.Property<int?>("KidsTv")
                        .HasColumnType("INTEGER")
                        .HasColumnName("KidsTv");

                    b.Property<int?>("LanguageTvShows")
                        .HasColumnType("INTEGER")
                        .HasColumnName("LanguageTvShows");

                    b.Property<int?>("Musicals")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Musicals");

                    b.Property<int?>("NatureTv")
                        .HasColumnType("INTEGER")
                        .HasColumnName("NatureTv");

                    b.Property<string>("Rating")
                        .HasColumnType("TEXT")
                        .HasColumnName("Rating");

                    b.Property<int?>("RealityTv")
                        .HasColumnType("INTEGER")
                        .HasColumnName("RealityTv");

                    b.Property<int?>("ReleaseYear")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ReleaseYear");

                    b.Property<int?>("Spirituality")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Spirituality");

                    b.Property<int?>("TalkShowsTvComedies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TalkShowsTvComedies");

                    b.Property<int?>("Thrillers")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Thrillers");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT")
                        .HasColumnName("Title");

                    b.Property<int?>("TvAction")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TvAction");

                    b.Property<int?>("TvComedies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TvComedies");

                    b.Property<int?>("TvDramas")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TvDramas");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT")
                        .HasColumnName("Type");

                    b.HasKey("ShowId");

                    b.ToTable("movies_titles", (string)null);
                });

            modelBuilder.Entity("CineNiche.API.Data.MoviesUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("UserId");

                    b.Property<int?>("Age")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Age");

                    b.Property<int?>("AmazonPrime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AmazonPrime");

                    b.Property<int?>("AppleTv")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AppleTV");

                    b.Property<string>("City")
                        .HasColumnType("TEXT")
                        .HasColumnName("City");

                    b.Property<int?>("Disney")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Disney");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasColumnName("Email");

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT")
                        .HasColumnName("Gender");

                    b.Property<int?>("Hulu")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Hulu");

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Max")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Max");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<int?>("Netflix")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Netflix");

                    b.Property<int?>("Paramount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Paramount");

                    b.Property<int?>("Peacock")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Peacock");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT")
                        .HasColumnName("Phone");

                    b.Property<string>("State")
                        .HasColumnType("TEXT")
                        .HasColumnName("State");

                    b.Property<int?>("Zip")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Zip");

                    b.HasKey("UserId");

                    b.ToTable("movies_users", (string)null);
                });

            modelBuilder.Entity("CineNiche.API.Data.MoviesRating", b =>
                {
                    b.HasOne("CineNiche.API.Data.MoviesTitle", "MoviesTitle")
                        .WithMany("Ratings")
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CineNiche.API.Data.MoviesUser", "MoviesUser")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MoviesTitle");

                    b.Navigation("MoviesUser");
                });

            modelBuilder.Entity("CineNiche.API.Data.MoviesTitle", b =>
                {
                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("CineNiche.API.Data.MoviesUser", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
